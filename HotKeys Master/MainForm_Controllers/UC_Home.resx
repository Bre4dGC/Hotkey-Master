<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AddButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>